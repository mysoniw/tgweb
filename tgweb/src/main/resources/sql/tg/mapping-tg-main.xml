<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE queryservice PUBLIC "-//ANYFRAME//DTD QUERYSERVICE//EN" 
	"http://www.anyframejava.org/dtd/anyframe-core-query-mapping-3.2.dtd">
<queryservice>
	<queries>
		<query id="MainResultDao.findAll" mappingStyle="none">
			<statement>
				<![CDATA[
SELECT A.*
FROM (
	SELECT
		ROW_NUMBER() OVER(ORDER BY MAX(CATEGORY), MODEL) AS ROWNUM
		, COUNT(1) OVER() AS TOTALCOUNT
		, MAX(TC_IDX) AS TC_IDX
		, CATEGORY
		, MODEL
		, MAX(FW_VERSION) AS FW_VERSION
		, CASE 
			WHEN MAX([SEARCH_STREAM]) = 0 THEN 'PASS' 
			WHEN MAX([SEARCH_STREAM]) = -1 THEN 'NG' 
			WHEN MAX([SEARCH_STREAM]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS SEARCH_STREAM
		, CASE 
			WHEN MAX([LIVE_STREAM]) = 0 THEN 'PASS' 
			WHEN MAX([LIVE_STREAM]) = -1 THEN 'NG' 
			WHEN MAX([LIVE_STREAM]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS LIVE_STREAM
		, CASE 
			WHEN MAX([BANDWIDTH]) = 0 THEN 'O' 
			WHEN MAX([BANDWIDTH]) = -1 THEN 'NG' 
			WHEN MAX([BANDWIDTH]) IS NULL THEN '' 
			ELSE 'O' 
		END AS BANDWIDTH
		, CASE 
			WHEN MAX([IMAGE_CONFIRM]) = 0 THEN 'PASS' 
			WHEN MAX([IMAGE_CONFIRM]) = -1 THEN 'NG' 
			WHEN MAX([IMAGE_CONFIRM]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS IMAGE_CONFIRM
		, CASE 
			WHEN MAX([VIEW_LATENCY]) = 0 THEN 'O' 
			WHEN MAX([VIEW_LATENCY]) = -1 THEN 'NG' 
			WHEN MAX([VIEW_LATENCY]) IS NULL THEN '' 
			ELSE 'O' 
		END AS VIEW_LATENCY
		, CASE 
			WHEN MAX([WEB]) = 0 THEN 'PASS' 
			WHEN MAX([WEB]) = -1 THEN 'NG' 
			WHEN MAX([WEB]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS WEB
		, CASE 
			WHEN MAX([LIVE_STREAM_WEB]) = 0 THEN 'PASS' 
			WHEN MAX([LIVE_STREAM_WEB]) = -1 THEN 'NG' 
			WHEN MAX([LIVE_STREAM_WEB]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS LIVE_STREAM_WEB
		, CASE 
			WHEN MAX([RS_485]) = 0 THEN 'PASS' 
			WHEN MAX([RS_485]) = -1 THEN 'NG' 
			WHEN MAX([RS_485]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS RS_485
		, CASE 
			WHEN MAX([PTZ]) = 0 THEN 'PASS' 
			WHEN MAX([PTZ]) = -1 THEN 'NG' 
			WHEN MAX([PTZ]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS PTZ
		, CASE 
			WHEN MAX([DST]) = 0 THEN 'PASS' 
			WHEN MAX([DST]) = -1 THEN 'NG' 
			WHEN MAX([DST]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS DST
	FROM
		(
		SELECT
			MAX(A.TC_IDX) AS TC_IDX
			, A.CATEGORY
			, A.MODEL
			, A.FW_VERSION
			, CASE 
				WHEN (SUM(A.RESULT_INT) = 0 OR SUM(A.RESULT_INT) IS NULL) AND SUM(A.NG_INT) > 0 THEN -1
				ELSE SUM(A.RESULT_INT)
			END AS RESULT_INT
			, A.TEST_PROJECT_ID
		FROM
			(
			SELECT
				A.TC_IDX
				, A.CATEGORY
				, A.MODEL
				, A.FW_VERSION
				, CASE RESULT 
					WHEN 'PASS' THEN 0
					WHEN 'FAIL' THEN 1
				END AS RESULT_INT
				, CASE RESULT
					WHEN 'NG' THEN 1
				END AS NG_INT
				, TEST_PROJECT_ID
			FROM
				SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
			ON 
				A.TC_IDX = B.TC_IDX
			WHERE
				TEST_PROJECT_ID IN ('SEARCH_STREAM', 'LIVE_STREAM', 'BANDWIDTH', 'VIEW_LATENCY', 'IMAGE_CONFIRM', 'WEB', 'RS_485', 'PTZ', 'DST')
				AND B.RESULT <> 'Unknown'
				AND A.IS_WEB <> 1
			#if ($CATEGORY && $CATEGORY != "" && $CATEGORY != "null")
				AND A.CATEGORY = :CATEGORY
			#end
			#if ($MODEL && $MODEL != "" && $MODEL != "null")
				AND A.MODEL = :MODEL
			#end
			#if ($FW_VERSION && $FW_VERSION != "" && $FW_VERSION != "null")
				AND A.FW_VERSION = :FW_VERSION
			#end
		UNION ALL
			SELECT
				A.TC_IDX
				, A.CATEGORY
				, A.MODEL
				, A.FW_VERSION
				, CASE RESULT
					WHEN 'PASS' THEN 0 
					WHEN 'FAIL' THEN 1
				END AS RESULT_INT
				, CASE RESULT
					WHEN 'NG' THEN 1
				END AS NG_INT
				, 'LIVE_STREAM_WEB' AS TEST_PROJECT_ID
			FROM
				SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
			ON
				A.TC_IDX = B.TC_IDX
			WHERE
				TEST_PROJECT_ID IN ('LIVE_STREAM')
				AND B.RESULT <> 'Unknown'
				AND A.IS_WEB = 1
			#if ($CATEGORY && $CATEGORY != "" && $CATEGORY != "null")
				AND A.CATEGORY = :CATEGORY
			#end
			#if ($MODEL && $MODEL != "" && $MODEL != "null")
				AND A.MODEL = :MODEL
			#end
			#if ($FW_VERSION && $FW_VERSION != "" && $FW_VERSION != "null")
				AND A.FW_VERSION = :FW_VERSION
			#end
			) A
		WHERE 
			1 = 1
		GROUP BY
			A.CATEGORY, A.MODEL, A.FW_VERSION, A.TEST_PROJECT_ID
		) A
	PIVOT (SUM(A.RESULT_INT) FOR A.TEST_PROJECT_ID IN ([SEARCH_STREAM], [LIVE_STREAM], [BANDWIDTH], [VIEW_LATENCY], [IMAGE_CONFIRM], [WEB], [LIVE_STREAM_WEB], [RS_485], [PTZ], [DST])) AS PVT
	WHERE TC_IDX IN 
		(
		SELECT TC_IDX FROM 
			(
			SELECT 
				MAX(A.TC_IDX) AS TC_IDX
				, DENSE_RANK() OVER(PARTITION BY A.CATEGORY, A.MODEL, A.TEST_PROJECT_ID ORDER BY A.FW_VERSION DESC) AS RANKING
			FROM
				(
					SELECT
						A.TC_IDX
						, A.CATEGORY
						, A.MODEL
						, A.FW_VERSION
						, TEST_PROJECT_ID
					FROM
						SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
					ON 
						A.TC_IDX = B.TC_IDX
					WHERE
						TEST_PROJECT_ID IN ('SEARCH_STREAM', 'LIVE_STREAM', 'BANDWIDTH', 'VIEW_LATENCY', 'IMAGE_CONFIRM', 'WEB', 'RS_485', 'PTZ', 'DST')
						AND B.RESULT <> 'Unknown'
						AND A.IS_WEB <> 1
					#if ($CATEGORY && $CATEGORY != "" && $CATEGORY != "null")
						AND A.CATEGORY = :CATEGORY
					#end
					#if ($MODEL && $MODEL != "" && $MODEL != "null")
						AND A.MODEL = :MODEL
					#end
					#if ($FW_VERSION && $FW_VERSION != "" && $FW_VERSION != "null")
						AND A.FW_VERSION = :FW_VERSION
					#end
				UNION ALL
					SELECT
						A.TC_IDX
						, A.CATEGORY
						, A.MODEL
						, A.FW_VERSION
						, 'LIVE_STREAM_WEB' AS TEST_PROJECT_ID
					FROM
						SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
					ON 
						A.TC_IDX = B.TC_IDX
					WHERE
						TEST_PROJECT_ID IN ('LIVE_STREAM')
						AND B.RESULT <> 'Unknown'
						AND A.IS_WEB = 1
					#if ($CATEGORY && $CATEGORY != "" && $CATEGORY != "null")
						AND A.CATEGORY = :CATEGORY
					#end
					#if ($MODEL && $MODEL != "" && $MODEL != "null")
						AND A.MODEL = :MODEL
					#end
					#if ($FW_VERSION && $FW_VERSION != "" && $FW_VERSION != "null")
						AND A.FW_VERSION = :FW_VERSION
					#end
				) A 
				LEFT OUTER JOIN SQE_TC_RESULT B
			ON
				A.TC_IDX = B.TC_IDX
			WHERE 
				TEST_PROJECT_ID IN ('SEARCH_STREAM', 'LIVE_STREAM', 'BANDWIDTH', 'VIEW_LATENCY', 'IMAGE_CONFIRM', 'WEB', 'LIVE_STREAM_WEB', 'RS_485', 'PTZ', 'DST')
				AND B.RESULT <> 'Unknown'
			GROUP BY
				A.CATEGORY, A.MODEL, A.FW_VERSION, A.TEST_PROJECT_ID
			) A
		WHERE A.RANKING = 1
		)
	GROUP BY MODEL, CATEGORY
) A
WHERE 
	1 = 1
#if (!$loadOnce || $loadOnce == "" || $loadOnce == "null")
	AND A.ROWNUM BETWEEN (:rows * (:page - 1)) + 1 AND (:rows * :page)
#end
ORDER BY "{{sidx}}"
#if ($sord == "desc")
	DESC
#else
	ASC
#end
				]]>
			</statement>
		</query>
		<query id="MainResultDao.exportExcel" mappingStyle="none">
			<statement>
				<![CDATA[
SELECT
	MAX(CATEGORY) AS "CATEGORY"
	, MODEL AS "MODEL"
--	, MAX(FW_VERSION) AS "FW_VERSION"
	, CASE 
		WHEN MAX([SEARCH_STREAM]) = 0 THEN 'PASS' 
		WHEN MAX([SEARCH_STREAM]) = -1 THEN 'NG' 
		WHEN MAX([SEARCH_STREAM]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "Search Stream"
	, CASE 
		WHEN MAX([LIVE_STREAM]) = 0 THEN 'PASS' 
		WHEN MAX([LIVE_STREAM]) = -1 THEN 'NG' 
		WHEN MAX([LIVE_STREAM]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "Live Stream"
	, CASE 
		WHEN MAX([BANDWIDTH]) = 0 THEN 'O' 
		WHEN MAX([BANDWIDTH]) = -1 THEN 'NG' 
		WHEN MAX([BANDWIDTH]) IS NULL THEN '' 
		ELSE 'O' 
	END AS "Bandwidth"
	, CASE 
		WHEN MAX([IMAGE_CONFIRM]) = 0 THEN 'PASS' 
		WHEN MAX([IMAGE_CONFIRM]) = -1 THEN 'NG' 
		WHEN MAX([IMAGE_CONFIRM]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "Image Confirm"
	, CASE 
		WHEN MAX([VIEW_LATENCY]) = 0 THEN 'O' 
		WHEN MAX([VIEW_LATENCY]) = -1 THEN 'NG' 
		WHEN MAX([VIEW_LATENCY]) IS NULL THEN '' 
		ELSE 'O' 
	END AS "View Latency"
	, CASE 
		WHEN MAX([WEB]) = 0 THEN 'PASS' 
		WHEN MAX([WEB]) = -1 THEN 'NG' 
		WHEN MAX([WEB]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "Web"
	, CASE 
		WHEN MAX([LIVE_STREAM_WEB]) = 0 THEN 'PASS' 
		WHEN MAX([LIVE_STREAM_WEB]) = -1 THEN 'NG' 
		WHEN MAX([LIVE_STREAM_WEB]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "Live Stream(Web)"
	, CASE 
		WHEN MAX([RS_485]) = 0 THEN 'PASS' 
		WHEN MAX([RS_485]) = -1 THEN 'NG' 
		WHEN MAX([RS_485]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "PTZ(Protocol)"
	, CASE 
		WHEN MAX([PTZ]) = 0 THEN 'PASS' 
		WHEN MAX([PTZ]) = -1 THEN 'NG' 
		WHEN MAX([PTZ]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "PTZ(Command)"
	, CASE 
		WHEN MAX([DST]) = 0 THEN 'PASS' 
		WHEN MAX([DST]) = -1 THEN 'NG' 
		WHEN MAX([DST]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "DST"
FROM
	(
	SELECT
		MAX(A.TC_IDX) AS TC_IDX
		, A.CATEGORY
		, A.MODEL
		, A.FW_VERSION
		, CASE 
			WHEN (SUM(A.RESULT_INT) = 0 OR SUM(A.RESULT_INT) IS NULL) AND SUM(A.NG_INT) > 0 THEN -1
			ELSE SUM(A.RESULT_INT)
		END AS RESULT_INT
		, A.TEST_PROJECT_ID
	FROM
		(SELECT
			A.TC_IDX
			, A.CATEGORY
			, A.MODEL
			, A.FW_VERSION
			, CASE RESULT 
				WHEN 'PASS' THEN 0
				WHEN 'FAIL' THEN 1
			END AS RESULT_INT
			, CASE RESULT
				WHEN 'NG' THEN 1
			END AS NG_INT
			, TEST_PROJECT_ID
		FROM
			SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
		ON 
			A.TC_IDX = B.TC_IDX
		WHERE
			TEST_PROJECT_ID IN ('SEARCH_STREAM', 'LIVE_STREAM', 'BANDWIDTH', 'VIEW_LATENCY', 'IMAGE_CONFIRM', 'WEB', 'RS_485', 'PTZ', 'DST')
			AND B.RESULT <> 'Unknown'
			AND A.IS_WEB <> 1
		#if ($CATEGORY && $CATEGORY != "" && $CATEGORY != "null")
			AND A.CATEGORY = :CATEGORY
		#end
		#if ($MODEL && $MODEL != "" && $MODEL != "null")
			AND A.MODEL = :MODEL
		#end
		#if ($FW_VERSION && $FW_VERSION != "" && $FW_VERSION != "null")
			AND A.FW_VERSION = :FW_VERSION
		#end
	UNION ALL
		SELECT
			A.TC_IDX
			, A.CATEGORY
			, A.MODEL
			, A.FW_VERSION
			, CASE RESULT
				WHEN 'PASS' THEN 0 
				WHEN 'FAIL' THEN 1
			END AS RESULT_INT
			, CASE RESULT
				WHEN 'NG' THEN 1
			END AS NG_INT
			, 'LIVE_STREAM_WEB' AS TEST_PROJECT_ID
		FROM
			SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
		ON
			A.TC_IDX = B.TC_IDX
		WHERE
			TEST_PROJECT_ID IN ('LIVE_STREAM')
			AND B.RESULT <> 'Unknown'
			AND A.IS_WEB = 1
		#if ($CATEGORY && $CATEGORY != "" && $CATEGORY != "null")
			AND A.CATEGORY = :CATEGORY
		#end
		#if ($MODEL && $MODEL != "" && $MODEL != "null")
			AND A.MODEL = :MODEL
		#end
		#if ($FW_VERSION && $FW_VERSION != "" && $FW_VERSION != "null")
			AND A.FW_VERSION = :FW_VERSION
		#end
		) A
	WHERE 
		1 = 1
	GROUP BY
		A.CATEGORY, A.MODEL, A.FW_VERSION, A.TEST_PROJECT_ID
	) A
PIVOT (SUM(A.RESULT_INT) FOR A.TEST_PROJECT_ID IN ([SEARCH_STREAM], [LIVE_STREAM], [BANDWIDTH], [VIEW_LATENCY], [IMAGE_CONFIRM], [WEB], [LIVE_STREAM_WEB], [RS_485], [PTZ], [DST])) AS PVT
WHERE TC_IDX IN 
	(
	SELECT TC_IDX FROM 
		(
		SELECT 
			MAX(A.TC_IDX) AS TC_IDX
			, DENSE_RANK() OVER(PARTITION BY A.CATEGORY, A.MODEL, A.TEST_PROJECT_ID ORDER BY A.FW_VERSION DESC) AS RANKING
		FROM
			(
					SELECT
						A.TC_IDX
						, A.CATEGORY
						, A.MODEL
						, A.FW_VERSION
						, TEST_PROJECT_ID
					FROM
						SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
					ON 
						A.TC_IDX = B.TC_IDX
					WHERE
						TEST_PROJECT_ID IN ('SEARCH_STREAM', 'LIVE_STREAM', 'BANDWIDTH', 'VIEW_LATENCY', 'IMAGE_CONFIRM', 'WEB', 'RS_485', 'PTZ', 'DST')
						AND B.RESULT <> 'Unknown'
						AND A.IS_WEB <> 1
					#if ($CATEGORY && $CATEGORY != "" && $CATEGORY != "null")
						AND A.CATEGORY = :CATEGORY
					#end
					#if ($MODEL && $MODEL != "" && $MODEL != "null")
						AND A.MODEL = :MODEL
					#end
					#if ($FW_VERSION && $FW_VERSION != "" && $FW_VERSION != "null")
						AND A.FW_VERSION = :FW_VERSION
					#end
				UNION ALL
					SELECT
						A.TC_IDX
						, A.CATEGORY
						, A.MODEL
						, A.FW_VERSION
						, 'LIVE_STREAM_WEB' AS TEST_PROJECT_ID
					FROM
						SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
					ON 
						A.TC_IDX = B.TC_IDX
					WHERE
						TEST_PROJECT_ID IN ('LIVE_STREAM')
						AND B.RESULT <> 'Unknown'
						AND A.IS_WEB = 1
					#if ($CATEGORY && $CATEGORY != "" && $CATEGORY != "null")
						AND A.CATEGORY = :CATEGORY
					#end
					#if ($MODEL && $MODEL != "" && $MODEL != "null")
						AND A.MODEL = :MODEL
					#end
					#if ($FW_VERSION && $FW_VERSION != "" && $FW_VERSION != "null")
						AND A.FW_VERSION = :FW_VERSION
					#end
			) A  
			LEFT OUTER JOIN SQE_TC_RESULT B
		ON
			A.TC_IDX = B.TC_IDX
		WHERE 
			TEST_PROJECT_ID IN ('SEARCH_STREAM', 'LIVE_STREAM', 'BANDWIDTH', 'VIEW_LATENCY', 'IMAGE_CONFIRM', 'WEB', 'LIVE_STREAM_WEB', 'RS_485', 'PTZ', 'DST')
			AND B.RESULT <> 'Unknown'
		GROUP BY
			A.CATEGORY, A.MODEL, A.FW_VERSION, A.TEST_PROJECT_ID
		) A
	WHERE A.RANKING = 1
	)
GROUP BY MODEL, CATEGORY
ORDER BY MAX(CATEGORY), MODEL
				]]>
			</statement>
		</query>
		<query id="MainModelDao.findAll" mappingStyle="none">
			<statement>
				<![CDATA[
SELECT A.*
FROM (
	SELECT
		ROW_NUMBER() OVER(ORDER BY MAX(FW_VERSION) DESC) AS ROWNUM
		, COUNT(1) OVER() AS TOTALCOUNT
		, MAX(TC_IDX) AS TC_IDX
		, MAX(CATEGORY) AS CATEGORY
		, MAX(MODEL) AS MODEL
		, MAX(FW_VERSION) AS FW_VERSION
		, CASE 
			WHEN MAX([SEARCH_STREAM]) = 0 THEN 'PASS' 
			WHEN MAX([SEARCH_STREAM]) = -1 THEN 'NG' 
			WHEN MAX([SEARCH_STREAM]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS SEARCH_STREAM
		, CASE 
			WHEN MAX([LIVE_STREAM]) = 0 THEN 'PASS' 
			WHEN MAX([LIVE_STREAM]) = -1 THEN 'NG' 
			WHEN MAX([LIVE_STREAM]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS LIVE_STREAM
		, CASE 
			WHEN MAX([BANDWIDTH]) = 0 THEN 'O' 
			WHEN MAX([BANDWIDTH]) = -1 THEN 'NG' 
			WHEN MAX([BANDWIDTH]) IS NULL THEN '' 
			ELSE 'O' 
		END AS BANDWIDTH
		, CASE 
			WHEN MAX([IMAGE_CONFIRM]) = 0 THEN 'PASS' 
			WHEN MAX([IMAGE_CONFIRM]) = -1 THEN 'NG' 
			WHEN MAX([IMAGE_CONFIRM]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS IMAGE_CONFIRM
		, CASE 
			WHEN MAX([VIEW_LATENCY]) = 0 THEN 'O' 
			WHEN MAX([VIEW_LATENCY]) = -1 THEN 'NG' 
			WHEN MAX([VIEW_LATENCY]) IS NULL THEN '' 
			ELSE 'O' 
		END AS VIEW_LATENCY
		, CASE 
			WHEN MAX([WEB]) = 0 THEN 'PASS' 
			WHEN MAX([WEB]) = -1 THEN 'NG' 
			WHEN MAX([WEB]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS WEB
		, CASE 
			WHEN MAX([LIVE_STREAM_WEB]) = 0 THEN 'PASS' 
			WHEN MAX([LIVE_STREAM_WEB]) = -1 THEN 'NG' 
			WHEN MAX([LIVE_STREAM_WEB]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS LIVE_STREAM_WEB
		, CASE 
			WHEN MAX([RS_485]) = 0 THEN 'PASS' 
			WHEN MAX([RS_485]) = -1 THEN 'NG' 
			WHEN MAX([RS_485]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS RS_485
		, CASE 
			WHEN MAX([PTZ]) = 0 THEN 'PASS' 
			WHEN MAX([PTZ]) = -1 THEN 'NG' 
			WHEN MAX([PTZ]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS PTZ
		, CASE 
			WHEN MAX([DST]) = 0 THEN 'PASS' 
			WHEN MAX([DST]) = -1 THEN 'NG' 
			WHEN MAX([DST]) IS NULL THEN '' 
			ELSE 'FAIL' 
		END AS DST
		, CONVERT(CHAR(19), MAX(INSERT_DATE), 120) AS INSERT_DATE
	FROM
		(
		SELECT
			MAX(A.TC_IDX) AS TC_IDX
			, MAX(A.CATEGORY) AS CATEGORY
			, MAX(A.MODEL) AS MODEL
			, MAX(A.FW_VERSION) AS FW_VERSION
			, CASE 
				WHEN (SUM(A.RESULT_INT) = 0 OR SUM(A.RESULT_INT) IS NULL) AND SUM(A.NG_INT) > 0 THEN -1
				ELSE SUM(A.RESULT_INT)
			END AS RESULT_INT
			, MAX(A.TEST_PROJECT_ID) AS TEST_PROJECT_ID
			, MAX(A.INSERT_DATE) AS INSERT_DATE
		FROM
			(
			SELECT
				A.TC_IDX
				, A.CATEGORY
				, A.MODEL
				, A.FW_VERSION
				, CASE RESULT 
					WHEN 'PASS' THEN 0
					WHEN 'FAIL' THEN 1
				END AS RESULT_INT
				, CASE RESULT
					WHEN 'NG' THEN 1
				END AS NG_INT
				, TEST_PROJECT_ID
				, B.INSERT_DATE
			FROM
				SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
			ON 
				A.TC_IDX = B.TC_IDX
			WHERE
				TEST_PROJECT_ID IN ('SEARCH_STREAM', 'LIVE_STREAM', 'BANDWIDTH', 'VIEW_LATENCY', 'IMAGE_CONFIRM', 'WEB', 'RS_485', 'PTZ', 'DST')
				AND B.RESULT <> 'Unknown'
				AND A.IS_WEB <> 1
				AND A.CATEGORY = :CATEGORY
				AND A.MODEL = :MODEL
			#if ($FW_VERSION && $FW_VERSION != "" && $FW_VERSION != "null")
				AND A.FW_VERSION = :FW_VERSION
			#end
		UNION ALL
			SELECT
				A.TC_IDX
				, A.CATEGORY
				, A.MODEL
				, A.FW_VERSION
				, CASE RESULT 
					WHEN 'PASS' THEN 0
					WHEN 'FAIL' THEN 1
				END AS RESULT_INT
				, CASE RESULT
					WHEN 'NG' THEN 1
				END AS NG_INT
				, 'LIVE_STREAM_WEB' AS TEST_PROJECT_ID
				, B.INSERT_DATE
			FROM
				SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
			ON 
				A.TC_IDX = B.TC_IDX
			WHERE
				TEST_PROJECT_ID IN ('LIVE_STREAM')
				AND B.RESULT <> 'Unknown'
				AND A.IS_WEB = 1
				AND A.CATEGORY = :CATEGORY
				AND A.MODEL = :MODEL
			#if ($FW_VERSION && $FW_VERSION != "" && $FW_VERSION != "null")
				AND A.FW_VERSION = :FW_VERSION
			#end
			) A
		WHERE 
			1 = 1
		GROUP BY
			A.TEST_PROJECT_ID, A.FW_VERSION
		) A
	PIVOT (SUM(A.RESULT_INT) FOR A.TEST_PROJECT_ID IN ([SEARCH_STREAM], [LIVE_STREAM], [BANDWIDTH], [VIEW_LATENCY], [IMAGE_CONFIRM], [WEB], [LIVE_STREAM_WEB], [RS_485], [PTZ], [DST])) AS PVT
	GROUP BY FW_VERSION
) A
WHERE 
	1 = 1
#if (!$loadOnce || $loadOnce == "" || $loadOnce == "null")
	AND A.ROWNUM BETWEEN (:rows * (:page - 1)) + 1 AND (:rows * :page)
#end
ORDER BY "{{sidx}}"
#if ($sord == "desc")
	DESC
#else
	ASC
#end
				]]>
			</statement>
		</query>
		<query id="MainModelDao.exportExcel" mappingStyle="none">
			<statement>
				<![CDATA[
SELECT
	MAX(CATEGORY) AS "CATEGORY"
	, MAX(MODEL) AS "MODEL"
	, MAX(FW_VERSION) AS "FW_VERSION"
	, CONVERT(CHAR(19), MAX(INSERT_DATE), 120) AS "Latest Execution"
	, CASE 
		WHEN MAX([SEARCH_STREAM]) = 0 THEN 'PASS' 
		WHEN MAX([SEARCH_STREAM]) = -1 THEN 'NG' 
		WHEN MAX([SEARCH_STREAM]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "Search Stream"
	, CASE 
		WHEN MAX([LIVE_STREAM]) = 0 THEN 'PASS' 
		WHEN MAX([LIVE_STREAM]) = -1 THEN 'NG' 
		WHEN MAX([LIVE_STREAM]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "Live Stream"
	, CASE 
		WHEN MAX([BANDWIDTH]) = 0 THEN 'O' 
		WHEN MAX([BANDWIDTH]) = -1 THEN 'NG' 
		WHEN MAX([BANDWIDTH]) IS NULL THEN '' 
		ELSE 'O' 
	END AS "Bandwidth"
	, CASE 
		WHEN MAX([IMAGE_CONFIRM]) = 0 THEN 'PASS' 
		WHEN MAX([IMAGE_CONFIRM]) = -1 THEN 'NG' 
		WHEN MAX([IMAGE_CONFIRM]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "Image Confirm"
	, CASE 
		WHEN MAX([VIEW_LATENCY]) = 0 THEN 'O' 
		WHEN MAX([VIEW_LATENCY]) = -1 THEN 'NG' 
		WHEN MAX([VIEW_LATENCY]) IS NULL THEN '' 
		ELSE 'O' 
	END AS "View Latency"
	, CASE 
		WHEN MAX([WEB]) = 0 THEN 'PASS' 
		WHEN MAX([WEB]) = -1 THEN 'NG' 
		WHEN MAX([WEB]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "Web"
	, CASE 
		WHEN MAX([LIVE_STREAM_WEB]) = 0 THEN 'PASS' 
		WHEN MAX([LIVE_STREAM_WEB]) = -1 THEN 'NG' 
		WHEN MAX([LIVE_STREAM_WEB]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "Live Stream(Web)"
	, CASE 
		WHEN MAX([RS_485]) = 0 THEN 'PASS' 
		WHEN MAX([RS_485]) = -1 THEN 'NG' 
		WHEN MAX([RS_485]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "PTZ(Protocol)"
	, CASE 
		WHEN MAX([PTZ]) = 0 THEN 'PASS' 
		WHEN MAX([PTZ]) = -1 THEN 'NG' 
		WHEN MAX([PTZ]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "PTZ(Command)"
	, CASE 
		WHEN MAX([DST]) = 0 THEN 'PASS' 
		WHEN MAX([DST]) = -1 THEN 'NG' 
		WHEN MAX([DST]) IS NULL THEN '' 
		ELSE 'FAIL' 
	END AS "DST"
FROM
	(
	SELECT
		MAX(A.TC_IDX) AS TC_IDX
		, MAX(A.CATEGORY) AS CATEGORY
		, MAX(A.MODEL) AS MODEL
		, MAX(A.FW_VERSION) AS FW_VERSION
		, CASE 
			WHEN (SUM(A.RESULT_INT) = 0 OR SUM(A.RESULT_INT) IS NULL) AND SUM(A.NG_INT) > 0 THEN -1
			ELSE SUM(A.RESULT_INT)
		END AS RESULT_INT
		, MAX(A.TEST_PROJECT_ID) AS TEST_PROJECT_ID
		, MAX(A.INSERT_DATE) AS INSERT_DATE
	FROM
		(
		SELECT
			A.TC_IDX
			, A.CATEGORY
			, A.MODEL
			, A.FW_VERSION
			, CASE RESULT 
				WHEN 'PASS' THEN 0
				WHEN 'FAIL' THEN 1
			END AS RESULT_INT
			, CASE RESULT
				WHEN 'NG' THEN 1
			END AS NG_INT
			, TEST_PROJECT_ID
			, B.INSERT_DATE
		FROM
			SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
		ON 
			A.TC_IDX = B.TC_IDX
		WHERE
			TEST_PROJECT_ID IN ('SEARCH_STREAM', 'LIVE_STREAM', 'BANDWIDTH', 'VIEW_LATENCY', 'IMAGE_CONFIRM', 'WEB', 'RS_485', 'PTZ', 'DST')
			AND B.RESULT <> 'Unknown'
			AND A.IS_WEB <> 1
			AND A.CATEGORY = :CATEGORY
			AND A.MODEL = :MODEL
		#if ($FW_VERSION && $FW_VERSION != "" && $FW_VERSION != "null")
			AND A.FW_VERSION = :FW_VERSION
		#end
	UNION ALL
		SELECT
			A.TC_IDX
			, A.CATEGORY
			, A.MODEL
			, A.FW_VERSION
			, CASE RESULT 
				WHEN 'PASS' THEN 0
				WHEN 'FAIL' THEN 1
			END AS RESULT_INT
			, CASE RESULT
				WHEN 'NG' THEN 1
			END AS NG_INT
			, 'LIVE_STREAM_WEB' AS TEST_PROJECT_ID
			, B.INSERT_DATE
		FROM
			SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
		ON 
			A.TC_IDX = B.TC_IDX
		WHERE
			TEST_PROJECT_ID IN ('LIVE_STREAM')
			AND B.RESULT <> 'Unknown'
			AND A.IS_WEB = 1
			AND A.CATEGORY = :CATEGORY
			AND A.MODEL = :MODEL
		#if ($FW_VERSION && $FW_VERSION != "" && $FW_VERSION != "null")
			AND A.FW_VERSION = :FW_VERSION
		#end
		) A
	WHERE 
		1 = 1
	GROUP BY
		A.TEST_PROJECT_ID, A.FW_VERSION
	) A
PIVOT (SUM(A.RESULT_INT) FOR A.TEST_PROJECT_ID IN ([SEARCH_STREAM], [LIVE_STREAM], [BANDWIDTH], [VIEW_LATENCY], [IMAGE_CONFIRM], [WEB], [LIVE_STREAM_WEB], [RS_485], [PTZ], [DST])) AS PVT
GROUP BY FW_VERSION
ORDER BY MAX(FW_VERSION) DESC
				]]>
			</statement>
		</query>
		<query id="MainFwDao.findAll" mappingStyle="none">
			<statement>
				<![CDATA[
SELECT A.*
FROM (
	SELECT
		ROW_NUMBER() OVER(ORDER BY MAX(A.TEST_CASE_ID)) AS ROWNUM
		, COUNT(1) OVER() AS TOTALCOUNT
		, MAX(A.TC_IDX) AS TC_IDX
		, MAX(A.CATEGORY) AS CATEGORY
		, MAX(A.MODEL) AS MODEL
		, MAX(A.FW_VERSION) AS FW_VERSION
		, MAX(A.TEST_PROJECT_ID) AS TEST_PROJECT_ID
		, CASE WHEN MAX(A.TEST_PROJECT_ID) = 'SEARCH_STREAM' THEN 'SEARCH_STREAM'
			WHEN MAX(A.TEST_PROJECT_ID) = 'LIVE_STREAM' THEN 'LIVE_STREAM'
			WHEN MAX(A.TEST_PROJECT_ID) = 'BANDWIDTH' THEN 'BANDWIDTH'
			WHEN MAX(A.TEST_PROJECT_ID) = 'IMAGE_CONFIRM' THEN 'IMAGE_CONFIRM'
			WHEN MAX(A.TEST_PROJECT_ID) = 'VIEW_LATENCY' THEN 'VIEW_LATENCY'
			WHEN MAX(A.TEST_PROJECT_ID) = 'WEB' THEN 'WEB'
			WHEN MAX(A.TEST_PROJECT_ID) = 'LIVE_STREAM_WEB' THEN 'LIVE_STREAM_WEB'
			WHEN MAX(A.TEST_PROJECT_ID) = 'RS_485' THEN 'RS_485'
			WHEN MAX(A.TEST_PROJECT_ID) = 'PTZ' THEN 'PTZ'
			WHEN MAX(A.TEST_PROJECT_ID) = 'DST' THEN 'DST'
			ELSE ''
		END AS TEST_PROJECT_ID_AS
		, MAX(A.TEST_CASE_ID) AS TEST_CASE_ID
		, MAX(A.TEST_CASE_NAME) AS TEST_CASE_NAME
		, CASE WHEN MAX(A.TEST_PROJECT_ID) IN ('BANDWIDTH', 'VIEW_LATENCY') THEN '-'
				ELSE CONVERT(VARCHAR(20), COUNT(TEST_CASE_ID) - SUM(A.RESULT_INT) - SUM(A.NG_INT)) END AS PASS
		, CASE WHEN MAX(A.TEST_PROJECT_ID) IN ('BANDWIDTH', 'VIEW_LATENCY') THEN '-'
				ELSE CONVERT(VARCHAR(20), SUM(A.RESULT_INT)) END AS FAIL
		, SUM(A.NG_INT) AS NG
		, CASE WHEN MAX(A.TEST_PROJECT_ID) IN ('BANDWIDTH', 'VIEW_LATENCY') THEN '-'
				ELSE CONVERT(VARCHAR(20), CAST(ROUND((COUNT(TEST_CASE_ID) - SUM(A.RESULT_INT) - SUM(A.NG_INT)) / CAST(COUNT(TEST_CASE_ID) AS FLOAT) * 100, 2) AS VARCHAR) + '%') END AS PASS_RATE
		, COUNT(A.TEST_CASE_ID) AS TEST_CASE_CNT
	FROM
		(
		SELECT
			MAX(A.TC_IDX) AS TC_IDX
			, MAX(A.CATEGORY) AS CATEGORY
			, MAX(A.MODEL) AS MODEL
			, MAX(A.FW_VERSION) AS FW_VERSION
			, CASE  
				WHEN SUM(RESULT_INT) > 0 THEN 1
				ELSE 0
			END	AS RESULT_INT
			, CASE 
				WHEN (SUM(A.RESULT_INT) = 0 OR SUM(A.RESULT_INT) IS NULL) AND SUM(A.NG_INT) > 0 THEN 1
				ELSE 0
			END AS NG_INT
			, MAX(TEST_PROJECT_ID) AS TEST_PROJECT_ID
			, MAX(TEST_CASE_ID) AS TEST_CASE_ID
			, MAX(TEST_CASE_NAME) AS TEST_CASE_NAME
		FROM (
			SELECT
				A.TC_IDX
				, A.CATEGORY
				, A.MODEL
				, A.FW_VERSION
				, CASE RESULT 
					WHEN 'PASS' THEN 0
					WHEN 'FAIL' THEN 1
					ELSE 0
				END AS RESULT_INT
				, CASE RESULT 
					WHEN 'NG' THEN 1
					ELSE 0
				END AS NG_INT
				, TEST_PROJECT_ID
				, TEST_CASE_ID
				, TEST_CASE_NAME
			FROM
				SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
			ON 
				A.TC_IDX = B.TC_IDX
			WHERE
				A.IS_WEB <> 1
				AND A.TEST_PROJECT_ID IN ('SEARCH_STREAM', 'LIVE_STREAM', 'BANDWIDTH', 'VIEW_LATENCY', 'IMAGE_CONFIRM', 'WEB', 'RS_485', 'PTZ', 'DST')
				AND A.CATEGORY = :CATEGORY
				AND MODEL = :MODEL
				AND FW_VERSION = :FW_VERSION
				AND B.RESULT <> 'Unknown'
		UNION ALL
			SELECT
				A.TC_IDX
				, A.CATEGORY
				, A.MODEL
				, A.FW_VERSION
				, CASE RESULT 
					WHEN 'PASS' THEN 0
					WHEN 'FAIL' THEN 1
					ELSE 0
				END AS RESULT_INT
				, CASE RESULT 
					WHEN 'NG' THEN 1
					ELSE 0
				END AS NG_INT
				, 'LIVE_STREAM_WEB' AS TEST_PROJECT_ID
				, TEST_CASE_ID
				, TEST_CASE_NAME
			FROM
				SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
			ON 
				A.TC_IDX = B.TC_IDX
			WHERE
				A.IS_WEB = 1
				AND A.TEST_PROJECT_ID = 'LIVE_STREAM'
				AND A.CATEGORY = :CATEGORY
				AND MODEL = :MODEL
				AND FW_VERSION = :FW_VERSION
				AND B.RESULT <> 'Unknown'
			) A
		WHERE
			1 = 1
		GROUP BY
			A.TEST_CASE_ID, A.TEST_PROJECT_ID
		) A
	WHERE 
		1 = 1
	GROUP BY
		A.TEST_PROJECT_ID
) A
WHERE 
	1 = 1
#if (!$loadOnce || $loadOnce == "" || $loadOnce == "null")
	AND A.ROWNUM BETWEEN (:rows * (:page - 1)) + 1 AND (:rows * :page)
#end
ORDER BY "{{sidx}}"
#if ($sord == "desc")
	DESC
#else
	ASC
#end
				]]>
			</statement>
		</query>
		<query id="MainFwDao.exportExcel" mappingStyle="none">
			<statement>
				<![CDATA[
SELECT
	MAX(A.CATEGORY) AS "CATEGORY"
	, MAX(A.MODEL) AS "MODEL"
	, MAX(A.FW_VERSION) AS "FW_VERSION"
	, CASE WHEN MAX(A.TEST_PROJECT_ID) = 'SEARCH_STREAM' THEN 'SEARCH_STREAM'
		WHEN MAX(A.TEST_PROJECT_ID) = 'LIVE_STREAM' THEN 'LIVE_STREAM'
		WHEN MAX(A.TEST_PROJECT_ID) = 'BANDWIDTH' THEN 'BANDWIDTH'
		WHEN MAX(A.TEST_PROJECT_ID) = 'IMAGE_CONFIRM' THEN 'IMAGE_CONFIRM'
		WHEN MAX(A.TEST_PROJECT_ID) = 'VIEW_LATENCY' THEN 'VIEW_LATENCY'
		WHEN MAX(A.TEST_PROJECT_ID) = 'WEB' THEN 'WEB'
		WHEN MAX(A.TEST_PROJECT_ID) = 'LIVE_STREAM_WEB' THEN 'LIVE_STREAM_WEB'
		WHEN MAX(A.TEST_PROJECT_ID) = 'RS_485' THEN 'RS_485'
		WHEN MAX(A.TEST_PROJECT_ID) = 'PTZ' THEN 'PTZ'
		WHEN MAX(A.TEST_PROJECT_ID) = 'DST' THEN 'DST'
		ELSE ''
	END AS "TEST_PROJECT_ID"
	, COUNT(TEST_CASE_ID) AS "TOTAL_TC"
	, CASE WHEN MAX(A.TEST_PROJECT_ID) IN ('BANDWIDTH', 'VIEW_LATENCY') THEN '-'
			ELSE CONVERT(VARCHAR(20), COUNT(TEST_CASE_ID) - SUM(A.RESULT_INT) - SUM(A.NG_INT)) END AS "PASS"
	, CASE WHEN MAX(A.TEST_PROJECT_ID) IN ('BANDWIDTH', 'VIEW_LATENCY') THEN '-'
			ELSE CONVERT(VARCHAR(20), SUM(A.RESULT_INT)) END AS "FAIL"
	, SUM(A.NG_INT) AS "NG"
	, CASE WHEN MAX(A.TEST_PROJECT_ID) IN ('BANDWIDTH', 'VIEW_LATENCY') THEN '-'
			ELSE CONVERT(VARCHAR(20), CAST(ROUND((COUNT(TEST_CASE_ID) - SUM(A.RESULT_INT) - SUM(A.NG_INT)) / CAST(COUNT(TEST_CASE_ID) AS FLOAT) * 100, 2) AS VARCHAR) + '%') END AS "PASS_RATE"
FROM
	(
	SELECT
		MAX(A.TC_IDX) AS TC_IDX
		, MAX(A.CATEGORY) AS CATEGORY
		, MAX(A.MODEL) AS MODEL
		, MAX(A.FW_VERSION) AS FW_VERSION
		, CASE  
			WHEN SUM(RESULT_INT) > 0 THEN 1
			ELSE 0
		END	AS RESULT_INT
		, CASE 
			WHEN (SUM(A.RESULT_INT) = 0 OR SUM(A.RESULT_INT) IS NULL) AND SUM(A.NG_INT) > 0 THEN 1
			ELSE 0
		END AS NG_INT
		, MAX(TEST_PROJECT_ID) AS TEST_PROJECT_ID
		, MAX(TEST_CASE_ID) AS TEST_CASE_ID
		, MAX(TEST_CASE_NAME) AS TEST_CASE_NAME
	FROM (
		SELECT
			A.TC_IDX
			, A.CATEGORY
			, A.MODEL
			, A.FW_VERSION
			, CASE RESULT 
				WHEN 'PASS' THEN 0
				WHEN 'FAIL' THEN 1
				ELSE 0
			END AS RESULT_INT
			, CASE RESULT 
				WHEN 'NG' THEN 1
				ELSE 0
			END AS NG_INT
			, TEST_PROJECT_ID
			, TEST_CASE_ID
			, TEST_CASE_NAME
		FROM
			SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
		ON 
			A.TC_IDX = B.TC_IDX
		WHERE
			A.IS_WEB <> 1
			AND A.TEST_PROJECT_ID IN ('SEARCH_STREAM', 'LIVE_STREAM', 'BANDWIDTH', 'VIEW_LATENCY', 'IMAGE_CONFIRM', 'WEB', 'RS_485', 'PTZ', 'DST')
			AND A.CATEGORY = :CATEGORY
			AND MODEL = :MODEL
			AND FW_VERSION = :FW_VERSION
			AND B.RESULT <> 'Unknown'
	UNION ALL
		SELECT
			A.TC_IDX
			, A.CATEGORY
			, A.MODEL
			, A.FW_VERSION
			, CASE RESULT 
				WHEN 'PASS' THEN 0
				WHEN 'FAIL' THEN 1
				ELSE 0
			END AS RESULT_INT
			, CASE RESULT 
				WHEN 'NG' THEN 1
				ELSE 0
			END AS NG_INT
			, 'LIVE_STREAM_WEB' AS TEST_PROJECT_ID
			, TEST_CASE_ID
			, TEST_CASE_NAME
		FROM
			SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B
		ON 
			A.TC_IDX = B.TC_IDX
		WHERE
			A.IS_WEB = 1
			AND A.TEST_PROJECT_ID = 'LIVE_STREAM'
			AND A.CATEGORY = :CATEGORY
			AND MODEL = :MODEL
			AND FW_VERSION = :FW_VERSION
			AND B.RESULT <> 'Unknown'
		) A
	WHERE
		1 = 1
	GROUP BY
		A.TEST_CASE_ID
	) A
WHERE 
	1 = 1
GROUP BY
	A.TEST_PROJECT_ID
ORDER BY MAX(A.TEST_CASE_ID)
				]]>
			</statement>
		</query>
	</queries>
</queryservice>
