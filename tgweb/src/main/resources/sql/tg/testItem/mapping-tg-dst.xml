<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE queryservice PUBLIC "-//ANYFRAME//DTD QUERYSERVICE//EN" 
	"http://www.anyframejava.org/dtd/anyframe-core-query-mapping-3.2.dtd">
<queryservice>
	<queries>
		<query id="DSTMainDao.findAll" mappingStyle="none">
			<statement>
				<![CDATA[
SELECT A.*
FROM (
	SELECT
		ROW_NUMBER() OVER(ORDER BY MAX(A.CATEGORY), MAX(A.MODEL), MAX(A.FW_VERSION) DESC) AS ROWNUM
		, COUNT(1) OVER() AS TOTALCOUNT
		, MAX(TC_IDX) AS TC_IDX
		, MAX(A.CATEGORY) AS CATEGORY
		, MAX(A.MODEL) AS MODEL
		, MAX(A.FW_VERSION) AS FW_VERSION
		, MAX(A.TEST_PROJECT_ID) AS TEST_PROJECT_ID
		, MAX(A.TEST_SUITE_ID) AS TEST_SUITE_ID
		, MAX(A.SUITE_DESCRIPTION) AS SUITE_DESCRIPTION
		, COUNT(TOTAL_CYCLE) AS TEST_CASE_COUNT
		, COUNT(TOTAL_CYCLE) - SUM(RESULT_INT) - SUM(NG_INT) AS TEST_CASE_PASS_COUNT
		, SUM(RESULT_INT) AS TEST_CASE_FAIL_COUNT
		, SUM(A.NG_INT) AS NG
		, CAST(ROUND((COUNT(TOTAL_CYCLE) - SUM(RESULT_INT) - SUM(NG_INT)) / CAST(COUNT(TOTAL_CYCLE) AS FLOAT) * 100, 2) AS VARCHAR) + '%' AS PASS_RATE
	FROM
		(
		SELECT
			MAX(TC_IDX) AS TC_IDX
			, MAX(A.CATEGORY) AS CATEGORY
			, MAX(A.MODEL) AS MODEL
			, MAX(A.FW_VERSION) AS FW_VERSION
			, MAX(A.TEST_PROJECT_ID) AS TEST_PROJECT_ID
			, MAX(A.TEST_SUITE_ID) AS TEST_SUITE_ID
			, MAX(A.SUITE_DESCRIPTION) AS SUITE_DESCRIPTION
			, CASE  
				WHEN SUM(A.RESULT_INT) > 0 THEN 1
				ELSE 0
			END	AS RESULT_INT
			, CASE 
				WHEN (SUM(A.RESULT_INT) = 0 OR SUM(A.RESULT_INT) IS NULL) AND SUM(A.NG_INT) > 0 THEN 1
				ELSE 0
			END AS NG_INT
			, COUNT(A.TEST_CASE_ID) AS TOTAL_CYCLE
		FROM
			(
			SELECT
				A.TC_IDX
				, A.CATEGORY
				, A.MODEL
				, A.FW_VERSION
				, CASE RESULT 
					WHEN 'PASS' THEN 0
					WHEN 'FAIL' THEN 1
					ELSE 0
				END AS RESULT_INT
				, CASE RESULT 
					WHEN 'NG' THEN 1
					ELSE 0
				END AS NG_INT
				, TEST_PROJECT_ID
				, TEST_SUITE_ID
				, TEST_CASE_ID
				, TEST_CASE_NAME
				, SUITE_DESCRIPTION
			FROM
				SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B ON A.TC_IDX = B.TC_IDX
			WHERE 
				TEST_PROJECT_ID = 'DST'
				AND B.RESULT <> 'Unknown'
			#if ($CATEGORY && $CATEGORY != "" && $CATEGORY != "null")
				AND A.CATEGORY = :CATEGORY
			#end
			#if ($MODEL && $MODEL != "" && $MODEL != "null")
				AND A.MODEL = :MODEL
			#end
			#if ($FW_VERSION && $FW_VERSION != "" && $FW_VERSION != "null")
				AND A.FW_VERSION = :FW_VERSION
			#end
			#if ($TEST_SUITE_ID && $TEST_SUITE_ID != "" && $TEST_SUITE_ID != "null")
				AND A.TEST_SUITE_ID = :TEST_SUITE_ID
			#end
		) A
		WHERE 
			1 = 1
		GROUP BY
			A.CATEGORY, A.MODEL, A.FW_VERSION, A.TEST_SUITE_ID, A.TEST_CASE_ID
	) A
	WHERE
		1 = 1
	GROUP BY
		A.CATEGORY, A.MODEL, A.FW_VERSION, A.TEST_SUITE_ID
) A
WHERE 
	1 = 1
#if (!$loadOnce || $loadOnce == "" || $loadOnce == "null")
	AND A.ROWNUM BETWEEN (:rows * (:page - 1)) + 1 AND (:rows * :page)
#end
ORDER BY "{{sidx}}"
#if ($sord == "desc")
	DESC
#else
	ASC
#end
				]]>
			</statement>
		</query>
		<query id="DSTMainDao.exportExcel" mappingStyle="none">
			<statement>
				<![CDATA[
SELECT
	MAX(A.TEST_PROJECT_ID) AS "TEST_PROJECT_ID"
	, MAX(A.CATEGORY) AS "CATEGORY"
	, MAX(A.MODEL) AS "MODEL"
	, MAX(A.FW_VERSION) AS "FW_VERSION"
	, MAX(A.TEST_SUITE_ID) AS "TEST_SUITE_ID"
	, MAX(A.SUITE_DESCRIPTION) AS "SUITE_DESCRIPTION"
	, COUNT(TOTAL_CYCLE) AS "TOTAL_TC"
	, COUNT(TOTAL_CYCLE) - SUM(RESULT_INT) - SUM(NG_INT) AS "PASS"
	, SUM(RESULT_INT) AS "FAIL"
	, SUM(A.NG_INT) AS "NG"
	, CAST(ROUND((COUNT(TOTAL_CYCLE) - SUM(RESULT_INT) - SUM(NG_INT)) / CAST(COUNT(TOTAL_CYCLE) AS FLOAT) * 100, 2) AS VARCHAR) + '%' AS "PASS_RATE"
FROM
	(
	SELECT
		MAX(TC_IDX) AS TC_IDX
		, MAX(A.CATEGORY) AS CATEGORY
		, MAX(A.MODEL) AS MODEL
		, MAX(A.FW_VERSION) AS FW_VERSION
		, MAX(A.TEST_PROJECT_ID) AS TEST_PROJECT_ID
		, MAX(A.TEST_SUITE_ID) AS TEST_SUITE_ID
		, MAX(A.SUITE_DESCRIPTION) AS SUITE_DESCRIPTION
		, CASE  
			WHEN SUM(A.RESULT_INT) > 0 THEN 1
			ELSE 0
		END	AS RESULT_INT
		, CASE 
			WHEN (SUM(A.RESULT_INT) = 0 OR SUM(A.RESULT_INT) IS NULL) AND SUM(A.NG_INT) > 0 THEN 1
			ELSE 0
		END AS NG_INT
		, COUNT(A.TEST_CASE_ID) AS TOTAL_CYCLE
	FROM
		(
		SELECT
			A.TC_IDX
			, A.CATEGORY
			, A.MODEL
			, A.FW_VERSION
			, CASE RESULT 
				WHEN 'PASS' THEN 0
				WHEN 'FAIL' THEN 1
				ELSE 0
			END AS RESULT_INT
			, CASE RESULT 
				WHEN 'NG' THEN 1
				ELSE 0
			END AS NG_INT
			, TEST_PROJECT_ID
			, TEST_SUITE_ID
			, TEST_CASE_ID
			, TEST_CASE_NAME
			, SUITE_DESCRIPTION
		FROM
			SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B ON A.TC_IDX = B.TC_IDX
		WHERE 
			TEST_PROJECT_ID = 'DST'
			AND B.RESULT <> 'Unknown'
		#if ($CATEGORY && $CATEGORY != "" && $CATEGORY != "null")
			AND A.CATEGORY = :CATEGORY
		#end
		#if ($MODEL && $MODEL != "" && $MODEL != "null")
			AND A.MODEL = :MODEL
		#end
		#if ($FW_VERSION && $FW_VERSION != "" && $FW_VERSION != "null")
			AND A.FW_VERSION = :FW_VERSION
		#end
		#if ($TEST_SUITE_ID && $TEST_SUITE_ID != "" && $TEST_SUITE_ID != "null")
			AND A.TEST_SUITE_ID = :TEST_SUITE_ID
		#end
	) A
	WHERE 
		1 = 1
	GROUP BY
		A.CATEGORY, A.MODEL, A.FW_VERSION, A.TEST_SUITE_ID, A.TEST_CASE_ID
) A
WHERE
	1 = 1
GROUP BY
	A.CATEGORY, A.MODEL, A.FW_VERSION, A.TEST_SUITE_ID
ORDER BY 
	MAX(A.CATEGORY), MAX(A.MODEL), MAX(A.FW_VERSION) DESC
				]]>
			</statement>
		</query>
		<query id="DSTTcDao.findAll" mappingStyle="none">
			<statement>
				<![CDATA[
SELECT A.*
FROM (
	SELECT
		ROW_NUMBER() OVER(
			ORDER BY 
			#if ($filterColumn && $filterColumn != "" && $filterColumn != "null")
				MAX(A.RESULT_INT) DESC ,
			#end
				MAX(A.CATEGORY)
				, MAX(A.MODEL)
				, MAX(A.FW_VERSION) DESC
				, MAX(A.TEST_CASE_ID)
		) AS ROWNUM
		, COUNT(1) OVER() AS TOTALCOUNT
		, MAX(A.TC_IDX) AS TC_IDX
		, MAX(A.CATEGORY) AS CATEGORY
		, MAX(A.MODEL) AS MODEL
		, MAX(A.FW_VERSION) AS FW_VERSION
		, MAX(A.TEST_PROJECT_ID) AS TEST_PROJECT_ID
		, MAX(A.TEST_SUITE_ID) AS TEST_SUITE_ID
		, A.TEST_CASE_ID
		, MAX(A.TEST_CASE_NAME) AS TEST_CASE_NAME
		, MAX(A.SUITE_DESCRIPTION) AS SUITE_DESCRIPTION
		, CASE 
			WHEN SUM(A.RESULT_INT) > 0 THEN 'FAIL'
			WHEN (SUM(A.RESULT_INT) = 0 OR SUM(A.RESULT_INT) IS NULL) AND SUM(A.NG_INT) > 0 THEN 'NG'
			ELSE 'PASS' 
		END AS RESULT
		, COUNT(A.TEST_CASE_ID) - SUM(A.RESULT_INT) - SUM(A.NG_INT) AS PASS
		, SUM(A.RESULT_INT) AS FAIL
		, SUM(A.NG_INT) AS NG
		, COUNT(A.TEST_CASE_ID) AS TOTAL_CYCLE
		, CAST(ROUND((COUNT(A.TEST_CASE_ID) - SUM(A.RESULT_INT) - SUM(A.NG_INT)) / CAST(COUNT(A.TEST_CASE_ID) AS FLOAT) * 100, 2) AS VARCHAR) + '%' AS PASS_RATE
		, MAX(A.EXTRA1) AS EXTRA1
		, MAX(A.EXTRA2) AS EXTRA2
		, MAX(A.EXTRA3) AS EXTRA3
		, MAX(A.EXTRA13) AS EXTRA13
		, MAX(A.EXTRA14) AS EXTRA14
	FROM
		(
		SELECT
			A.TC_IDX
			, A.CATEGORY
			, A.MODEL
			, A.FW_VERSION
			, CASE RESULT 
				WHEN 'PASS' THEN 0
				WHEN 'FAIL' THEN 1
				ELSE 0
			END AS RESULT_INT
			, CASE RESULT 
				WHEN 'NG' THEN 1
				ELSE 0
			END AS NG_INT
			, TEST_PROJECT_ID
			, TEST_SUITE_ID
			, TEST_CASE_ID
			, TEST_CASE_NAME
			, SUITE_DESCRIPTION
			, EXTRA1
			, EXTRA2
			, EXTRA3
			, EXTRA13
			, EXTRA14
		FROM
			SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B ON A.TC_IDX = B.TC_IDX
		WHERE 
			TEST_PROJECT_ID = 'DST'
			AND B.RESULT <> 'Unknown'
			AND A.CATEGORY = :CATEGORY
			AND A.MODEL = :MODEL
			AND A.FW_VERSION = :FW_VERSION
			AND A.TEST_SUITE_ID = :TEST_SUITE_ID
	) A
	WHERE 
		1 = 1
	GROUP BY
		A.TEST_CASE_ID
) A
WHERE 
	1 = 1
#if (!$loadOnce || $loadOnce == "" || $loadOnce == "null")
	AND A.ROWNUM BETWEEN (:rows * (:page - 1)) + 1 AND (:rows * :page)
#end
ORDER BY "{{sidx}}"
#if ($sord == "desc")
	DESC
#else
	ASC
#end
				]]>
			</statement>
		</query>
		<query id="DSTTcDao.exportExcel" mappingStyle="none">
			<statement>
				<![CDATA[
SELECT
	MAX(A.TEST_PROJECT_ID) AS "TEST_PROJECT_ID"
	, MAX(A.CATEGORY) AS "CATEGORY"
	, MAX(A.MODEL) AS "MODEL"
	, MAX(A.FW_VERSION) AS "FW_VERSION"
	, MAX(A.TEST_SUITE_ID) AS "TEST_SUITE_ID"
	, MAX(A.TEST_CASE_NAME) AS "TEST_CASE_NAME"
	, MAX(A.SUITE_DESCRIPTION) AS "SUITE_DESCRIPTION"
	, MAX(A.EXTRA1) AS "EXTRA1"
	, MAX(A.EXTRA2) AS "EXTRA2"
	, MAX(A.EXTRA13) AS "EXTRA13"
	, MAX(A.EXTRA14) AS "EXTRA14"
	, MAX(A.EXTRA3) AS "EXTRA3"
	, COUNT(A.TEST_CASE_ID) AS "TOTAL_CYCLE"
	, CASE 
		WHEN SUM(A.RESULT_INT) > 0 THEN 'FAIL'
		WHEN (SUM(A.RESULT_INT) = 0 OR SUM(A.RESULT_INT) IS NULL) AND SUM(A.NG_INT) > 0 THEN 'NG'
		ELSE 'PASS' 
	END AS "RESULT"
	, COUNT(A.TEST_CASE_ID) - SUM(A.RESULT_INT) - SUM(A.NG_INT) AS "PASS"
	, SUM(A.RESULT_INT) AS "FAIL"
	, SUM(A.NG_INT) AS "NG"
	, CAST(ROUND((COUNT(A.TEST_CASE_ID) - SUM(A.RESULT_INT) - SUM(A.NG_INT)) / CAST(COUNT(A.TEST_CASE_ID) AS FLOAT) * 100, 2) AS VARCHAR) + '%' AS "PASS_RATE"
FROM
	(
	SELECT
		A.TC_IDX
		, A.CATEGORY
		, A.MODEL
		, A.FW_VERSION
		, CASE RESULT 
			WHEN 'PASS' THEN 0
			WHEN 'FAIL' THEN 1
			ELSE 0
		END AS RESULT_INT
		, CASE RESULT 
			WHEN 'NG' THEN 1
			ELSE 0
		END AS NG_INT
		, TEST_PROJECT_ID
		, TEST_SUITE_ID
		, TEST_CASE_ID
		, TEST_CASE_NAME
		, SUITE_DESCRIPTION
		, EXTRA1
		, EXTRA2
		, EXTRA3
		, EXTRA13
		, EXTRA14
	FROM
		SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B ON A.TC_IDX = B.TC_IDX
	WHERE 
		TEST_PROJECT_ID = 'DST'
		AND B.RESULT <> 'Unknown'
		AND A.CATEGORY = :CATEGORY
		AND A.MODEL = :MODEL
		AND A.FW_VERSION = :FW_VERSION
	#if ($TEST_SUITE_ID && $TEST_SUITE_ID != "" && $TEST_SUITE_ID != "null")
		AND A.TEST_SUITE_ID = :TEST_SUITE_ID
	#end
	#if ($RESULT && $RESULT != "" && $RESULT != "null")
		AND B.RESULT = :RESULT
	#end
) A
WHERE 
	1 = 1
GROUP BY
	A.TEST_CASE_ID
ORDER BY 
	MAX(A.CATEGORY), MAX(A.MODEL), MAX(A.FW_VERSION) DESC, MAX(A.TEST_CASE_ID)
				]]>
			</statement>
		</query>
		<query id="DSTCycleDao.findAll" mappingStyle="none">
			<statement>
				<![CDATA[
SELECT A.*
FROM (
	SELECT
		ROW_NUMBER() OVER(
			ORDER BY 			
			#if ($filterColumn && $filterColumn != "" && $filterColumn != "null")
				RESULT ASC ,
			#end
			A.CYCLE
		) AS ROWNUM
		, COUNT(1) OVER() AS TOTALCOUNT
		, A.TC_IDX
		, A.CATEGORY
		, A.MODEL
		, A.FW_VERSION
		, A.CYCLE
		, A.NODE_MAC
		, A.NODE_IP
		, RESULT
		, TEST_PROJECT_ID
		, TEST_CASE_ID
		, TEST_CASE_NAME
		, SUITE_DESCRIPTION
		, EXTRA1 AS EXTRA1     
		, EXTRA2 AS EXTRA2
		, EXTRA3 AS EXTRA3
		, EXTRA4 AS EXTRA4
		, EXTRA5 AS EXTRA5
		, EXTRA6 AS EXTRA6
		, EXTRA7 AS EXTRA7
		, EXTRA8 AS EXTRA8
		, EXTRA9 AS EXTRA9
		, EXTRA10 AS EXTRA10
		, EXTRA11 AS EXTRA11
		, EXTRA12 AS EXTRA12
		, EXTRA13 AS EXTRA13
		, EXTRA14 AS EXTRA14
		, EXTRA15 AS EXTRA15
		, EXTRA16 AS EXTRA16
		, EXTRA17 AS EXTRA17
		, EXTRA18 AS EXTRA18
		, EXTRA19 AS EXTRA19
		, EXTRA20 AS EXTRA20
		, STUFF(ISNULL((SELECT ', ' + LOG_NAME FROM SQE_TC_LOG WHERE TC_IDX = A.TC_IDX GROUP BY LOG_NAME FOR XML PATH (''), TYPE).value('.','VARCHAR(MAX)'), ''), 1, 2, '') AS LOG_FILE
		, B.CAUSE
	FROM
		SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B ON A.TC_IDX = B.TC_IDX
	WHERE 
		TEST_PROJECT_ID = 'DST'
		AND B.RESULT <> 'Unknown'
		AND A.CATEGORY = :CATEGORY
		AND A.MODEL = :MODEL
		AND A.FW_VERSION = :FW_VERSION
	#if ($TEST_CASE_ID && $TEST_CASE_ID != "" && $TEST_CASE_ID != "null")
		AND A.TEST_CASE_ID = :TEST_CASE_ID
	#end
) A
WHERE 
	1 = 1
#if (!$loadOnce || $loadOnce == "" || $loadOnce == "null")
	AND A.ROWNUM BETWEEN (:rows * (:page - 1)) + 1 AND (:rows * :page)
#end
ORDER BY "{{sidx}}"
#if ($sord == "desc")
	DESC
#else
	ASC
#end
				]]>
			</statement>
		</query>
		<query id="DSTCycleDao.exportExcel" mappingStyle="none">
			<statement>
				<![CDATA[
SELECT
	TEST_PROJECT_ID AS "TEST_PROJECT_ID"
	, A.CATEGORY AS "CATEGORY"
	, A.MODEL AS "MODEL"
	, A.FW_VERSION AS "FW_VERSION"
	, TEST_SUITE_ID AS "TEST_SUITE_ID"
	, TEST_CASE_NAME AS "TEST_CASE_NAME"
	, SUITE_DESCRIPTION AS "SUITE_DESCRIPTION"
	, A.NODE_MAC AS "NODE_MAC"
	, A.NODE_IP AS "NODE_IP"
	, EXTRA3 AS "EXTRA3"
	, EXTRA12 AS "EXTRA12"
	, EXTRA1 AS "EXTRA1"
	, EXTRA2 AS "EXTRA2"
	, EXTRA4 AS "EXTRA4"
	, EXTRA5 AS "EXTRA5"
	, EXTRA6 AS "EXTRA6"
	, EXTRA7 AS "EXTRA7"
	, EXTRA15 AS "EXTRA15"
	, EXTRA16 AS "EXTRA16"
	, EXTRA13 AS "EXTRA13"
	, EXTRA14 AS "EXTRA14"
	, EXTRA8 AS "EXTRA8"
	, EXTRA9 AS "EXTRA9"
	, EXTRA10 AS "EXTRA10"
	, EXTRA11 AS "EXTRA11"
	, EXTRA17 AS "EXTRA17"
	, EXTRA18 AS "EXTRA18"
	, EXTRA19 AS "EXTRA19"
	, EXTRA20 AS "EXTRA20"
	, A.CYCLE AS "CYCLE"
	, RESULT AS "RESULT"
FROM
	SQE_TEST_CASE_MASTER A LEFT OUTER JOIN SQE_TC_RESULT B ON A.TC_IDX = B.TC_IDX
WHERE 
	TEST_PROJECT_ID = 'DST'
	AND B.RESULT <> 'Unknown'
	AND A.CATEGORY = :CATEGORY
	AND A.MODEL = :MODEL
	AND A.FW_VERSION = :FW_VERSION
#if ($TEST_CASE_ID && $TEST_CASE_ID != "" && $TEST_CASE_ID != "null")
	AND A.TEST_CASE_ID = :TEST_CASE_ID
#end
#if ($RESULT && $RESULT != "" && $RESULT != "null")
	AND B.RESULT = :RESULT
#end
ORDER BY 
	A.CYCLE
				]]>
			</statement>
		</query>
		<query id="DSTDetailDao.find" mappingStyle="none">
			<statement>
				<![CDATA[
SELECT
	CONVERT(VARCHAR(19), REMOTE_START, 120) AS REMOTE_START
	, CONVERT(VARCHAR(19), REMOTE_END, 120) AS REMOTE_END
	, CONVERT(VARCHAR(19), TIME_START_IMG, 120) AS TIME_START_IMG
	, CONVERT(VARCHAR(19), TIME_END_IMG, 120) AS TIME_END_IMG
	, PATH_START_IMG
	, PATH_END_IMG
	, CONVERT(VARCHAR(19), B.START_TIME, 120) AS START_TIME
	, CONVERT(VARCHAR(19), B.END_TIME, 120) AS END_TIME
	, CONVERT(VARCHAR(19), B.INSERT_DATE, 120) AS INSERT_DATE
	, CONVERT(VARCHAR(10), DATEDIFF(MILLISECOND, B.START_TIME, B.END_TIME)/86400000) + 'Days ' +
	CONVERT(VARCHAR(10), (DATEDIFF(MILLISECOND, B.START_TIME, B.END_TIME)%86400000)/3600000) + 'h '+
	CONVERT(VARCHAR(10), (DATEDIFF(MILLISECOND, B.START_TIME, B.END_TIME)%3600000)/60000) + 'm '+
	CONVERT(VARCHAR(10), (DATEDIFF(MILLISECOND, B.START_TIME, B.END_TIME)%60000)/1000) + 's' AS EXECUTION_TIME
FROM
	SQE_TEST_CASE_MASTER A
	LEFT OUTER JOIN SQE_TC_RESULT B ON A.TC_IDX = B.TC_IDX 
	LEFT OUTER JOIN SQE_DST_RESULT C ON A.TC_IDX = C.TC_IDX
WHERE 
	A.TC_IDX = :TC_IDX
				]]>
			</statement>
		</query>
		<query id="DSTDetailDao.exportExcel" mappingStyle="none">
			<statement>
				<![CDATA[
SELECT
	TEST_PROJECT_ID AS "TEST_PROJECT_ID"
	, A.CATEGORY AS "CATEGORY"
	, A.MODEL AS "MODEL"
	, A.FW_VERSION AS "FW_VERSION"
	, TEST_SUITE_ID AS "TEST_SUITE_ID"
	, TEST_CASE_NAME AS "TEST_CASE_NAME"
	, SUITE_DESCRIPTION AS "SUITE_DESCRIPTION"
	, A.NODE_MAC AS "NODE_MAC"
	, A.NODE_IP AS "NODE_IP"
	, EXTRA3 AS "EXTRA3"
	, EXTRA12 AS "EXTRA12"
	, EXTRA1 AS "EXTRA1"
	, EXTRA2 AS "EXTRA2"
	, EXTRA4 AS "EXTRA4"
	, EXTRA5 AS "EXTRA5"
	, EXTRA6 AS "EXTRA6"
	, EXTRA7 AS "EXTRA7"
	, EXTRA15 AS "EXTRA15"
	, EXTRA16 AS "EXTRA16"
	, EXTRA13 AS "EXTRA13"
	, EXTRA14 AS "EXTRA14"
	, EXTRA8 AS "EXTRA8"
	, EXTRA9 AS "EXTRA9"
	, EXTRA10 AS "EXTRA10"
	, EXTRA11 AS "EXTRA11"
	, EXTRA17 AS "EXTRA17"
	, EXTRA18 AS "EXTRA18"
	, EXTRA19 AS "EXTRA19"
	, EXTRA20 AS "EXTRA20"
	, CONVERT(VARCHAR(19), REMOTE_START, 120) AS "DST Before"
	, CONVERT(VARCHAR(19), REMOTE_END, 120) AS "DST After"
	, CONVERT(VARCHAR(19), TIME_START_IMG, 120) AS "DST Before Image"
	, CONVERT(VARCHAR(19), TIME_END_IMG, 120) AS "DST After Image"
	, A.CYCLE AS "CYCLE"
	, RESULT AS "RESULT"
	, B.CAUSE AS "CAUSE"
FROM
	SQE_TEST_CASE_MASTER A
	LEFT OUTER JOIN SQE_TC_RESULT B ON A.TC_IDX = B.TC_IDX 
	LEFT OUTER JOIN SQE_DST_RESULT C ON A.TC_IDX = C.TC_IDX
WHERE 
	A.TC_IDX = :TC_IDX
				]]>
			</statement>
		</query>
	</queries>
</queryservice>
